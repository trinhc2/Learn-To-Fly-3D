/**
 * Do not edit this file. Do not submit changes to this file.
 *
 * We will mark your submission with this original copy of the mathLib2D.h.
 * Modifications will not even be seen by the course staff.
 *
 * If you edit this file you may receive an automatic zero on this assignment.
 *
 * If the compiler gave you an error message pointing at this file then it
 * means that your source file is not correctly implementing this header file.
 *
 * Your task is ONLY to produce mathLib2D.cpp by implementing these class and
 * function prototypes below.
 *
 * You are free to use these in future assignments. This header
 * file must remain the same however. For those interested, we are not worried
 * about the possible performance hit from C++'s "copy semantics". The compiler
 * is very good at optimizing these operations. Furthermore, we have settled on
 * float instead of double or type parameters. This choice is sufficient for
 * the course but you are again free to do what you wish in future assignments.
 */
#ifndef MATHLIB_3D_H
#define MATHLIB_3D_H

class Point3D {
public:
    Point3D();
    Point3D(float inX, float inY, float inZ);
    float mX;
    float mY;
    float mZ;
    float distanceTo(Point3D other);
    float fastDistanceTo(Point3D other);
};

class Vec3D {
public:
    Vec3D();
    Vec3D(float inX, float inY, float inZ);
    float mX;
    float mY;
    float mZ;
    float length();
    Vec3D normalize();
    Vec3D multiply(float scalar);
    Point3D movePoint(Point3D source);

    static Vec3D createVector(Point3D p1, Point3D p2);
};

#endif
